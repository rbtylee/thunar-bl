
<refentry id="ThunarxRenamer">
<refmeta>
<refentrytitle role="top_of_page" id="ThunarxRenamer.top_of_page">ThunarxRenamer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>THUNARX Library  <inlinegraphic fileref='bulk-rename.png' format='PNG'/>
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ThunarxRenamer</refname>
<refpurpose>The abstract base class for bulk renamers</refpurpose>
</refnamediv>

<refsect1 id="ThunarxRenamer.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="thunarx-renamer-get-help-url">thunarx_renamer_get_help_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="thunarx-renamer-set-help-url">thunarx_renamer_set_help_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="thunarx-renamer-get-name">thunarx_renamer_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="thunarx-renamer-set-name">thunarx_renamer_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="thunarx-renamer-process">thunarx_renamer_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="thunarx-renamer-load">thunarx_renamer_load</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="thunarx-renamer-save">thunarx_renamer_save</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="thunarx-renamer-get-menu-items">thunarx_renamer_get_menu_items</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="thunarx-renamer-changed">thunarx_renamer_changed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ThunarxRenamer.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="ThunarxRenamer--help-url">help-url</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="ThunarxRenamer--name">name</link></entry><entry role="property_flags">Read / Write / Construct&#160;Only</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ThunarxRenamer.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signal_proto_type" colwidth="150px"/>
<colspec colname="signal_proto_name" colwidth="300px"/>
<colspec colname="signal_proto_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="ThunarxRenamer-changed">changed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-FIRST:CAPS">Run First</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ThunarxRenamer.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="ThunarxRenamer-struct">ThunarxRenamer</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="ThunarxRenamerClass">ThunarxRenamerClass</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ThunarxRenamer.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkWidget">GtkWidget</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkContainer">GtkContainer</link>
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkBox">GtkBox</link>
                    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> ThunarxRenamer
</screen>
</refsect1>
<refsect1 id="ThunarxRenamer.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
ThunarxRenamer implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>,  <link linkend="GtkBuildable">GtkBuildable</link> and  <link linkend="GtkOrientable">GtkOrientable</link>.</para>

</refsect1>

<refsect1 id="ThunarxRenamer.includes"><title>Includes</title><synopsis>#include &lt;thunarx/thunarx.h&gt;
</synopsis></refsect1>

<refsect1 id="ThunarxRenamer.description" role="desc">
<title role="desc.title">Description</title>
<para>The abstract base class <type>ThunarxRenamer</type> is implemented by
extensions which provide additional bulk renamers that should be used in
the bulk rename dialog.</para>
<para>Derived classes must override the <link linkend="thunarx-renamer-process"><function>thunarx_renamer_process()</function></link> method, which
is called by the bulk rename dialog for every file to generate a new name. For
example, the <type>ThunarSbrReplaceRenamer</type> class included in the
<literal>thunar-sbr</literal> plugin (which is part of the Thunar distribution)
provides a bulk renamer, named <emphasis>Search &amp; Replace</emphasis>,
which allows the user to rename multiple files by searching for a pattern in
each file name and, if the pattern is found, replacing it with the specified
replacement text.</para>
<para>The active <type>ThunarxRenamer</type>s user interface is displayed in a frame
below the file list, as shown in the screenshot above. Derived classes should try
to limit the number of widgets displayed in the main user interface. For example,
if you have more than six settings, you should consider adding an <guibutton>Advanced</guibutton>,
button which opens a dialog with the additional settings.</para>

</refsect1>
<refsect1 id="ThunarxRenamer.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="thunarx-renamer-get-help-url" role="function">
<title>thunarx_renamer_get_help_url&#160;()</title>
<indexterm zone="thunarx-renamer-get-help-url"><primary>thunarx_renamer_get_help_url</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
thunarx_renamer_get_help_url (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>);</programlisting>
<para>Returns the URL of the documentation for <parameter>renamer</parameter>

or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no specific documentation is available
for <parameter>renamer</parameter>
 and the general documentation of the
Thunar renamers should be displayed instead.</para>
<refsect3 id="thunarx-renamer-get-help-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="thunarx-renamer-get-help-url.returns" role="returns">
<title>Returns</title>
<para> the URL of the documentation for <parameter>renamer</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-set-help-url" role="function">
<title>thunarx_renamer_set_help_url&#160;()</title>
<indexterm zone="thunarx-renamer-set-help-url"><primary>thunarx_renamer_set_help_url</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
thunarx_renamer_set_help_url (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *help_url</parameter>);</programlisting>
<para>The URL to the documentation of this <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.
Derived classes can set this property to point to the
documentation for the specific renamer. The documentation
of the specific renamer in turn should contain a link to
the general Thunar renamer documentation.</para>
<para>May also be unset, in which case the general Thunar renamer
documentation will be shown when the user clicks the "Help"
button.</para>
<refsect3 id="thunarx-renamer-set-help-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>help_url</para></entry>
<entry role="parameter_description"><para>the new URL to the documentation of <parameter>renamer</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-get-name" role="function">
<title>thunarx_renamer_get_name&#160;()</title>
<indexterm zone="thunarx-renamer-get-name"><primary>thunarx_renamer_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
thunarx_renamer_get_name (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>);</programlisting>
<para>Returns the user visible name for <parameter>renamer</parameter>
, previously
set with <link linkend="thunarx-renamer-set-name"><function>thunarx_renamer_set_name()</function></link>.</para>
<refsect3 id="thunarx-renamer-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="thunarx-renamer-get-name.returns" role="returns">
<title>Returns</title>
<para> the user visible name for <parameter>renamer</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-set-name" role="function">
<title>thunarx_renamer_set_name&#160;()</title>
<indexterm zone="thunarx-renamer-set-name"><primary>thunarx_renamer_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
thunarx_renamer_set_name (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>Sets the user visible name for <parameter>renamer</parameter>
 to <parameter>name</parameter>
. This method should
only be called by derived classes and prior to returning the <parameter>renamer</parameter>

is returned from <link linkend="thunarx-renamer-provider-get-renamers"><function>thunarx_renamer_provider_get_renamers()</function></link>.</para>
<refsect3 id="thunarx-renamer-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the new user visible name for <parameter>renamer</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-process" role="function">
<title>thunarx_renamer_process&#160;()</title>
<indexterm zone="thunarx-renamer-process"><primary>thunarx_renamer_process</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
thunarx_renamer_process (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                         <parameter><link linkend="ThunarxFileInfo"><type>ThunarxFileInfo</type></link> *file</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *text</parameter>,
                         <parameter><link linkend="guint"><type>guint</type></link> index</parameter>);</programlisting>
<para>Determines the replacement for <parameter>text</parameter>
 (which is the relevant
part of the full <parameter>file</parameter>
 name, i.e. either the suffix, the name
or the name and the suffix).</para>
<para>The caller is responsible to free the returned string using
<link linkend="g-free"><function>g_free()</function></link> when no longer needed.</para>
<refsect3 id="thunarx-renamer-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>the <link linkend="ThunarxFileInfo"><type>ThunarxFileInfo</type></link> for the file whose new
name - according to <parameter>renamer</parameter>
- should be
determined.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>the part of the filename to which the
<parameter>renamer</parameter>
should be applied.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>the index of the file in the list, used
for renamers that work on numbering.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="thunarx-renamer-process.returns" role="returns">
<title>Returns</title>
<para> the string with which to replace <parameter>text</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-load" role="function">
<title>thunarx_renamer_load&#160;()</title>
<indexterm zone="thunarx-renamer-load"><primary>thunarx_renamer_load</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
thunarx_renamer_load (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                      <parameter><link linkend="GHashTable"><type>GHashTable</type></link> *settings</parameter>);</programlisting>
<para>Tells <parameter>renamer</parameter>
 to load its internal settings from the specified
<parameter>settings</parameter>
. The <parameter>settings</parameter>
 hash table contains previously saved
settings, see <link linkend="thunarx-renamer-save"><function>thunarx_renamer_save()</function></link>, as key/value pairs of
strings. That is, both the keys and the values are strings.</para>
<para>Implementations of <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> may decide to override this
method to perform custom loading of settings. If you do not
override this method, the default method of <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>
will be used, which simply loads all <link linkend="GObject"><type>GObject</type></link> properties
provided by <parameter>renamer</parameter>
<!---->s class (excluding the ones
provided by the parent classes) from the <parameter>settings</parameter>
. The
<link linkend="GObject"><type>GObject</type></link> properties must be transformable to strings and
from strings.</para>
<para>If you decide to override this method for your <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>
implementation, you should also override <link linkend="thunarx-renamer-save"><function>thunarx_renamer_save()</function></link>.</para>
<refsect3 id="thunarx-renamer-load.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>settings</para></entry>
<entry role="parameter_description"><para>a <link linkend="GHashTable"><type>GHashTable</type></link> which contains the previously saved
settings for <parameter>renamer</parameter>
as key/value pairs of strings.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-save" role="function">
<title>thunarx_renamer_save&#160;()</title>
<indexterm zone="thunarx-renamer-save"><primary>thunarx_renamer_save</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
thunarx_renamer_save (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                      <parameter><link linkend="GHashTable"><type>GHashTable</type></link> *settings</parameter>);</programlisting>
<para>Tells <parameter>renamer</parameter>
 to save its internal settings to the specified
<parameter>settings</parameter>
, which can afterwards be loaded by <link linkend="thunarx-renamer-load"><function>thunarx_renamer_load()</function></link>.</para>
<para>The strings saved to <parameter>settings</parameter>
 must be allocated by <link linkend="g-strdup"><function>g_strdup()</function></link>,
both the keys and the values. For example to store the string
<literal>Bar</literal> for the setting <literal>Foo</literal>,
you'd use:</para>
<informalexample><programlisting>
g_hash_table_replace (settings, g_strdup ("Foo"), g_strdup ("Bar"));
</programlisting></informalexample>
<para>Implementations of <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> may decide to override this
method to perform custom saving of settings. If you do not overrride
this method, the default method of <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> will be used,
which simply stores all <link linkend="GObject"><type>GObject</type></link> properties provided by the
<parameter>renamer</parameter>
<!---->s class (excluding the ones provided by the parent
classes) to the <parameter>settings</parameter>
. The <link linkend="GObject"><type>GObject</type></link> properties must be transformable
to strings.</para>
<para>If you decide to override this method for your <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>
implementation, you should also override <link linkend="thunarx-renamer-load"><function>thunarx_renamer_load()</function></link>.</para>
<refsect3 id="thunarx-renamer-save.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>settings</para></entry>
<entry role="parameter_description"><para>a <link linkend="GHashTable"><type>GHashTable</type></link> to which the current settings of <parameter>renamer</parameter>
should be stored as key/value pairs of strings.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-get-menu-items" role="function">
<title>thunarx_renamer_get_menu_items&#160;()</title>
<indexterm zone="thunarx-renamer-get-menu-items"><primary>thunarx_renamer_get_menu_items</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
thunarx_renamer_get_menu_items (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>,
                                <parameter><link linkend="GtkWindow"><type>GtkWindow</type></link> *window</parameter>,
                                <parameter><link linkend="GList"><type>GList</type></link> *files</parameter>);</programlisting>
<para>Returns the list of <link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link><!---->s provided by <parameter>renamer</parameter>
 for
the given list of <parameter>files</parameter>
. By default, this method returns <link linkend="NULL:CAPS"><literal>NULL</literal></link>
(the empty list), but derived classes may override this method
to provide additional items for files in the bulk renamer
dialog list.</para>
<para>The returned <link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link><!---->s will be displayed in the file's
context menu of the bulk renamer dialog, when this <parameter>renamer</parameter>
 is
active. For example, an ID3-Tag based renamer may add an menu item
"Edit Tags" to the context menus of supported media files and,
when activated, display a dialog (which should be transient and
modal for <parameter>window</parameter>
, if not <link linkend="NULL:CAPS"><literal>NULL</literal></link>), which allows the users to edit
media file tags on-the-fly.</para>
<para>Derived classes that override this method should always check
first if all the <link linkend="ThunarxFileInfo"><type>ThunarxFileInfo</type></link><!---->s in the list of <parameter>files</parameter>

are supported, and only return menu items that can be performed on
this specific list of <parameter>files</parameter>
. For example, the ID3-Tag renamer
mentioned above, should first check whether all items in <parameter>files</parameter>

are actually audio files. The <link linkend="thunarx-file-info-has-mime-type"><function>thunarx_file_info_has_mime_type()</function></link>
of the <link linkend="ThunarxFileInfo"><type>ThunarxFileInfo</type></link> interface can be used to easily test
whether a file in the <parameter>files</parameter>
 list is of a certain MIME type.</para>
<para>Some menu items may only work properly if only a single file is
selected (for example, the ID3-Tag renamer will probably only
supporting editing one file at a time). In this case you have
basicly two options: Either you can return <link linkend="NULL:CAPS"><literal>NULL</literal></link> here if <parameter>files</parameter>

does not contain exactly one item, or you can return the menu items
as usual, but make them insensitive, using:</para>
<informalexample><programlisting>
thunarx_menu_item_set_sensitive (item, FALSE);
</programlisting></informalexample>
<para>The latter has the advantage that the user will still notice the
existance of the menu item and probably realize that it can only be
applied to a single item at once.</para>
<para>The caller is responsible to free the returned list using something
like the following:</para>
<informalexample><programlisting>
g_list_free_full (list, g_object_unref);
</programlisting></informalexample>
<para>As a special note, this method automatically takes a reference on the
<parameter>renamer</parameter>
 for every <link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link> object returned from the real implementation
of this method in <parameter>renamer</parameter>
. This is to make sure that the extension stays
in memory for at least the time that the menu items are used.</para>
<para>The name of <link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link><!---->s returned from this method must be namespaced with
the module to avoid collision with internal file manager menu items and
menu items provided by other extensions. For example, the menu item
provided by the ID3-Tag renamer mentioned above, should be named
<literal>TagRenamer::edit-tags</literal> (if <literal>TagRenamer</literal>
is the class name). For additional information about the way <link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link><!---->s
should be returned from extensions and the way they are used, read the
description of the <link linkend="ThunarxMenuProvider"><type>ThunarxMenuProvider</type></link> interface or read the introduction
provided with this reference manual.</para>
<para>A note of warning concerning the <parameter>window</parameter>
 parameter. Plugins should
avoid taking a reference on <parameter>window</parameter>
, as that might introduce a
circular reference and can thereby cause a quite large memory leak.
Instead, if <parameter>window</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, add a weak reference using the
<link linkend="g-object-weak-ref"><function>g_object_weak_ref()</function></link> or <link linkend="g-object-add-weak-pointer"><function>g_object_add_weak_pointer()</function></link> method. But don't
forget to release the weak reference if <parameter>window</parameter>
 survived the lifetime
of your menu item (which is likely to be the case in most situations).</para>
<refsect3 id="thunarx-renamer-get-menu-items.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>window</para></entry>
<entry role="parameter_description"><para>a <link linkend="GtkWindow"><type>GtkWindow</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>files</para></entry>
<entry role="parameter_description"><para>a <link linkend="GList"><type>GList</type></link> of <link linkend="ThunarxFileInfo"><type>ThunarxFileInfo</type></link><!---->s. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> ThunarxFileInfo]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="thunarx-renamer-get-menu-items.returns" role="returns">
<title>Returns</title>
<para>the list of
<link linkend="ThunarxMenuItem"><type>ThunarxMenuItem</type></link><!---->s provided by <parameter>renamer</parameter>
for the given list of
<parameter>files</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>element-type</acronym> ThunarxMenuItem]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="thunarx-renamer-changed" role="function">
<title>thunarx_renamer_changed&#160;()</title>
<indexterm zone="thunarx-renamer-changed"><primary>thunarx_renamer_changed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
thunarx_renamer_changed (<parameter><link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer</parameter>);</programlisting>
<para>This method should be used by derived classes
to emit the "changed" signal for <parameter>renamer</parameter>
. See
the documentation of the "changed" signal for
details.</para>
<refsect3 id="thunarx-renamer-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="ThunarxRenamer.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="ThunarxRenamer-struct" role="struct">
<title>struct ThunarxRenamer</title>
<indexterm zone="ThunarxRenamer-struct"><primary>ThunarxRenamer</primary></indexterm>
<programlisting language="C">struct ThunarxRenamer;</programlisting>
</refsect2>
<refsect2 id="ThunarxRenamerClass" role="struct">
<title>struct ThunarxRenamerClass</title>
<indexterm zone="ThunarxRenamerClass"><primary>ThunarxRenamerClass</primary></indexterm>
<programlisting language="C">struct ThunarxRenamerClass {
  /* virtual methods */
  gchar *(*process)        (ThunarxRenamer  *renamer,
                            ThunarxFileInfo *file,
                            const gchar     *text,
                            guint            index);

  void   (*load)           (ThunarxRenamer  *renamer,
                            GHashTable      *settings);
  void   (*save)           (ThunarxRenamer  *renamer,
                            GHashTable      *settings);

  GList *(*get_menu_items) (ThunarxRenamer  *renamer,
                            GtkWindow       *window,
                            GList           *files);

  /* signals */
  void (*changed) (ThunarxRenamer *renamer);
};
</programlisting>
<para>Abstract base class with virtual methods implemented by extensions
that provide additional bulk renamers for the integrated bulk
rename module in Thunar.</para>
<refsect3 id="ThunarxRenamerClass.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="ThunarxRenamerClass.process">process</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>see <link linkend="thunarx-renamer-process"><function>thunarx_renamer_process()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="ThunarxRenamerClass.load">load</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>see <link linkend="thunarx-renamer-load"><function>thunarx_renamer_load()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="ThunarxRenamerClass.save">save</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>see <link linkend="thunarx-renamer-save"><function>thunarx_renamer_save()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="ThunarxRenamerClass.get-menu-items">get_menu_items</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>see <link linkend="thunarx-renamer-get-menu-items"><function>thunarx_renamer_get_menu_items()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="ThunarxRenamerClass.changed">changed</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>see <link linkend="thunarx-renamer-changed"><function>thunarx_renamer_changed()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>

</refsect1>
<refsect1 id="ThunarxRenamer.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="ThunarxRenamer--help-url" role="property"><title>The <literal>“help-url”</literal> property</title>
<indexterm zone="ThunarxRenamer--help-url"><primary>ThunarxRenamer:help-url</primary></indexterm>
<programlisting>  “help-url”                 <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The URL to the documentation of this <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.
Derived classes can set this property to point to the
documentation for the specific renamer. The documentation
of the specific renamer in turn should contain a link to
the general Thunar renamer documentation.</para>
<para>May also be unset, in which case the general Thunar renamer
documentation will be shown when the user clicks the "Help"
button.</para>
<para>Owner: ThunarxRenamer</para>
<para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="ThunarxRenamer--name" role="property"><title>The <literal>“name”</literal> property</title>
<indexterm zone="ThunarxRenamer--name"><primary>ThunarxRenamer:name</primary></indexterm>
<programlisting>  “name”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The user visible name of the renamer, that is displayed
in the bulk rename dialog of the file manager. Derived
classes should set a useful name.</para>
<para>Owner: ThunarxRenamer</para>
<para>Flags: Read / Write / Construct&#160;Only</para>
<para>Default value: NULL</para>
</refsect2>

</refsect1>
<refsect1 id="ThunarxRenamer.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="ThunarxRenamer-changed" role="signal"><title>The <literal>“changed”</literal> signal</title>
<indexterm zone="ThunarxRenamer-changed"><primary>ThunarxRenamer::changed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link> *renamer,
               <link linkend="gpointer"><type>gpointer</type></link>        user_data)</programlisting>
<para>Derived classes should emit this signal using the
<link linkend="thunarx-renamer-changed"><function>thunarx_renamer_changed()</function></link> method whenever the user
changed a setting in the <parameter>renamer</parameter>
 GUI.</para>
<para>The file manager will then invoke <link linkend="thunarx-renamer-process"><function>thunarx_renamer_process()</function></link>
for all files that should be renamed and update the preview.</para>
<refsect3 id="ThunarxRenamer-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>renamer</para></entry>
<entry role="parameter_description"><para>a <link linkend="ThunarxRenamer"><type>ThunarxRenamer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-FIRST:CAPS">Run First</link></para>
</refsect2>
</refsect1>

</refentry>
